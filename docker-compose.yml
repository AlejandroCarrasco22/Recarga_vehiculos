version: '3.7'

volumes:
  kong_data: {}
  users_data: {}
  chargerpoints_data: {}
  vehicles_data: {}
  recharge_data: {}
  

networks: #Red interna para comunicar los servicios 
  kong-net:

services:

  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:9.6
    container_name: kong-postgres
    restart: on-failure
    networks:
      - kong-net
    volumes:
      - kong_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      POSTGRES_DB: kong
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3


  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: ${KONG_DOCKER_TAG:-kong:latest}
    command: kong migrations bootstrap
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
    depends_on:
      kong-database:
        condition: service_healthy


  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: ${KONG_DOCKER_TAG:-kong:latest}
    restart: on-failure
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    depends_on:
      kong-database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "8444:8444"


  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    image: pantsel/konga:latest
    command: "-c prepare -a postgres -u postgresql://kong:${KONG_PG_PASSWORD:-kong}@kong-database:5432/konga"
    networks:
      - kong-net
    restart: on-failure
    depends_on:
      kong-database:
        condition: service_healthy


  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga:latest
    restart: always
    networks:
      - kong-net
    environment:
      DB_ADAPTER: postgres
      DB_URI: postgresql://kong:${KONG_PG_PASSWORD:-kong}@kong-database:5432/konga
      NODE_ENV: production
    depends_on:
      kong-database:
        condition: service_healthy
    ports:
      - "1338:1337"
      
  front:
    image: my-angular-app
    build: 
      context: ./AccesoREST/RestClient
      dockerfile: ./Dockerfile
    restart: unless-stopped
    ports:
      - "4200:80"
    networks:
      - kong-net

  chargerpoints:
    image: chargerpoints-api-image
    build:
      context: .
      dockerfile: ./chargerpoints/Dockerfile
    restart: unless-stopped
    ports:
      - 8080:8080
    depends_on:
      - chargerpoints-database
    networks:
      - kong-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://chargerpoints-database:3306/PuntosRecarga?createDatabaseIfNotExist=true
    healthcheck:
      test: ["CMD", "mysql", "--user=echo", "--password=echo", "--host=chargerpoints-database", "--execute=SELECT 1"]
      interval: 30s
      timeout: 10s
      retries: 5


  chargerpoints-database:
    image: mysql #Usamos imagen del respositorio ya creada
    hostname: PuntosRecarga-database
    cap_add:
      - SYS_NICE
    restart: unless-stopped
    ports:
      - "3310:3306"
    networks:
      - kong-net
    volumes:
      - chargerpoints_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: echo
      MYSQL_USER: echo
      MYSQL_PASSWORD: echo
      MYSQL_DATABASE: PuntosRecarga
      MYSQL_ROOT_HOST: '%'
  
  login:
    image: login-api-image
    build:
      context: .
      dockerfile: ./login/Dockerfile
    restart: unless-stopped
    networks:
      - kong-net

  users:
    image: users-api-image
    build:
      context: .
      dockerfile: ./users/Dockerfile
    restart: unless-stopped
    ports: 
      - 8082:8080
    depends_on:
      - users-database
    networks:
      - kong-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://users-database:3306/Usuarios?createDatabaseIfNotExist=true
    healthcheck:
      test: ["CMD", "mysql", "--user=echo", "--password=echo", "--host=users-database", "--execute=SELECT 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  users-database:
    image: mysql #Usamos imagen del respositorio ya creada
    hostname: Usuarios-database
    cap_add:
      - SYS_NICE
    restart: unless-stopped
    ports:
      - "3307:3306"
    networks:
      - kong-net
    volumes:
      - users_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: echo
      MYSQL_USER: echo
      MYSQL_PASSWORD: echo
      MYSQL_DATABASE: Usuarios
      MYSQL_ROOT_HOST: '%'

  vehicles:
    image: vehicles-api-image
    build:
      context: .
      dockerfile: ./vehicles/Dockerfile
    restart: unless-stopped
    ports:
      - 8083:8080
    depends_on:
      - vehicles-database
    networks:
      - kong-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://vehicles-database:3306/Vehiculos?createDatabaseIfNotExist=true
    healthcheck:
      test: ["CMD", "mysql", "--user=echo", "--password=echo", "--host=vehicles-database", "--execute=SELECT 1"]
      interval: 30s
      timeout: 10s
      retries: 5


  vehicles-database:
    image: mysql #Usamos imagen del respositorio ya creada
    hostname: Vehiculos-database
    cap_add:
      - SYS_NICE
    restart: unless-stopped
    ports:
      - "3308:3306"
    networks:
      - kong-net
    volumes:
      - vehicles_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: echo
      MYSQL_USER: echo
      MYSQL_PASSWORD: echo
      MYSQL_DATABASE: Vehiculos
      MYSQL_ROOT_HOST: '%'

  recharge:
    image: recharge-api-image
    build:
      context: .
      dockerfile: ./recharge/Dockerfile
    restart: unless-stopped
    ports:
      - 8084:8080
    depends_on:
      - recharge-database
    networks:
      - kong-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://recharge-database:3306/Recargas?createDatabaseIfNotExist=true
    healthcheck:
      test: ["CMD", "mysql", "--user=echo", "--password=echo", "--host=recharge-database", "--execute=SELECT 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  
  recharge-database:
    image: mysql #Usamos imagen del respositorio ya creada
    hostname: Recargas-database
    cap_add:
      - SYS_NICE
    restart: unless-stopped
    ports:
      - "3309:3306"
    networks:
      - kong-net
    volumes:
      - recharge_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: echo
      MYSQL_USER: echo
      MYSQL_PASSWORD: echo
      MYSQL_DATABASE: Recargas
      MYSQL_ROOT_HOST: '%'

